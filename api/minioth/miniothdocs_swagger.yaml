basePath: /v1
definitions:
  kyri56xcaesar_kuspace_internal_utils.Group:
    properties:
      gid:
        description: |-
          Gid is the numeric group ID.
          @example 3001
        example: 3001
        type: integer
      groupname:
        description: |-
          Groupname is the name of the group.
          @example researchers
        example: researchers
        type: string
    type: object
  kyri56xcaesar_kuspace_internal_utils.Password:
    properties:
      expirationDate:
        type: string
      hashpass:
        description: |-
          Hashpass is the hashed password.
          @example $2a$10$7s5YfF7...
        example: $2a$10$7s5YfF7...
        type: string
      inactivityPeriod:
        type: string
      lastPasswordChange:
        description: LastPasswordChange is the last time the password was changed.
        type: string
      maxiumPasswordAge:
        type: string
      minimumPasswordAge:
        type: string
      warningPeriod:
        type: string
    type: object
  kyri56xcaesar_kuspace_internal_utils.User:
    description: Contains user metadata, credentials, and group memberships.
    properties:
      groups:
        description: Groups is a list of groups the user belongs to.
        items:
          $ref: '#/definitions/kyri56xcaesar_kuspace_internal_utils.Group'
        type: array
      home:
        description: Home is the user’s home directory path.
        example: /home/johndoe
        type: string
      info:
        description: Info is optional user metadata or notes.
        example: researcher in group A
        type: string
      password:
        allOf:
        - $ref: '#/definitions/kyri56xcaesar_kuspace_internal_utils.Password'
        description: Password contains the user’s password settings and hash.
      pgroup:
        description: Pgroup is the user’s primary group ID.
        type: integer
      shell:
        description: Shell is the user’s default shell.
        example: /bin/bash
        type: string
      uid:
        description: Uid is the user’s numeric ID.
        type: integer
      username:
        description: |-
          Username is the unique login name of the user.
          @example johndoe
        example: johndoe
        type: string
    type: object
  pkg_minioth.LoginClaim:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  pkg_minioth.RegisterClaim:
    properties:
      user:
        $ref: '#/definitions/kyri56xcaesar_kuspace_internal_utils.User'
    type: object
host: minioth.local:9090
info:
  contact: {}
  description: API for user authentication and management using JWT.
  title: Minioth Auth API
  version: "1.0"
paths:
  /.well-known/jwks.json:
    get:
      description: Returns the JSON Web Key Set used to verify JWTs.
      produces:
      - application/json
      responses:
        "200":
          description: JWKS keys
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to read or parse JWKS
          schema:
            additionalProperties:
              type: string
            type: object
      summary: JWKS endpoint
      tags:
      - well-known
  /.well-known/minioth:
    get:
      description: Returns a basic status and version of the Minioth service.
      produces:
      - application/json
      responses:
        "200":
          description: Service status
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Healthcheck endpoint
      tags:
      - well-known
  /.well-known/openid-configuration:
    get:
      description: Provides OIDC configuration metadata for clients.
      produces:
      - application/json
      responses:
        "200":
          description: OIDC provider metadata
          schema:
            additionalProperties:
              type: string
            type: object
      summary: OpenID Connect Discovery Document
      tags:
      - well-known
  /admin/audit/logs:
    get:
      consumes:
      - application/json
      description: Retrieves recent audit logs from the server. Optional query param
        'max' specifies the max number of bytes to read.
      parameters:
      - description: Maximum number of bytes to fetch from the audit log
        in: query
        name: max
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Audit logs returned successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to read or open audit log
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get audit logs
      tags:
      - admin
  /admin/groupadd:
    post:
      consumes:
      - application/json
      parameters:
      - description: Group data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/kyri56xcaesar_kuspace_internal_utils.Group'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Add a new group
      tags:
      - admin
  /admin/groupdel:
    delete:
      parameters:
      - description: Group ID to delete
        in: query
        name: gid
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a group
      tags:
      - admin
  /admin/groupmod:
    put:
      consumes:
      - application/json
      parameters:
      - description: Full group object for replacement
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/kyri56xcaesar_kuspace_internal_utils.Group'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Modify an entire group entry
      tags:
      - admin
  /admin/grouppatch:
    patch:
      consumes:
      - application/json
      parameters:
      - description: Fields to update in the group
        in: body
        name: data
        required: true
        schema:
          properties:
            fields:
              additionalProperties: true
              type: object
            gid:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Patch an existing group
      tags:
      - admin
  /admin/groups:
    get:
      description: Retrieves all groups.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              allOf:
              - {}
              - properties:
                  content:
                    items:
                      $ref: '#/definitions/kyri56xcaesar_kuspace_internal_utils.Group'
                    type: array
                type: object
            type: object
      summary: Get groups
      tags:
      - admin
  /admin/hasher:
    post:
      consumes:
      - application/json
      description: Hashes a plaintext input or verifies a hash if both are provided.
      parameters:
      - description: Text or Hash Verification Input
        in: body
        name: input
        required: true
        schema:
          properties:
            hash:
              type: string
            hashcost:
              type: integer
            text:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Hash or verify text
      tags:
      - admin
  /admin/useradd:
    post:
      consumes:
      - application/json
      parameters:
      - description: User registration info
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/pkg_minioth.RegisterClaim'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Add a new user
      tags:
      - admin
  /admin/userdel:
    delete:
      parameters:
      - description: User ID to delete
        in: query
        name: uid
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a user
      tags:
      - admin
  /admin/usermod:
    put:
      consumes:
      - application/json
      parameters:
      - description: User data for full update
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/pkg_minioth.RegisterClaim'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Modify an entire user entry
      tags:
      - admin
  /admin/userpatch:
    patch:
      consumes:
      - application/json
      parameters:
      - description: Fields to update (must include 'uid')
        in: body
        name: data
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Patch an existing user
      tags:
      - admin
  /admin/users:
    get:
      description: Retrieves user(s), optionally filtered by UID.
      parameters:
      - description: User ID
        in: query
        name: uid
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              allOf:
              - {}
              - properties:
                  content:
                    items:
                      $ref: '#/definitions/kyri56xcaesar_kuspace_internal_utils.User'
                    type: array
                type: object
            type: object
      summary: Get users
      tags:
      - admin
  /admin/verify-password:
    post:
      consumes:
      - application/json
      description: Authenticates a user using username and password without issuing
        a token.
      parameters:
      - description: User Credentials
        in: body
        name: credentials
        required: true
        schema:
          properties:
            password:
              type: string
            username:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Verify password
      tags:
      - admin
  /login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns access and refresh tokens.
      parameters:
      - description: User login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pkg_minioth.LoginClaim'
      produces:
      - application/json
      responses:
        "200":
          description: login successful
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Validation or auth failure
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login a user
      tags:
      - auth
  /passwd:
    post:
      consumes:
      - application/json
      description: Allows a user to change their password.
      parameters:
      - description: User Credentials
        in: body
        name: credentials
        required: true
        schema:
          properties:
            password:
              type: string
            username:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Change password
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      description: Registers a new user with provided credentials and returns UID
        and primary group.
      parameters:
      - description: User registration payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pkg_minioth.RegisterClaim'
      produces:
      - application/json
      responses:
        "200":
          description: registration successful
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid input or failed to register
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: User already exists
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - auth
  /token/refresh:
    post:
      consumes:
      - application/json
      description: Generates new access and refresh tokens using a valid refresh token.
      parameters:
      - description: Refresh Token
        in: body
        name: refresh_token
        required: true
        schema:
          properties:
            refresh_token:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Refresh access token
      tags:
      - auth
  /user/me:
    get:
      description: Returns full user info based on the access token.
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get user information
      tags:
      - auth
  /user/token:
    get:
      description: Checks if a token is valid and returns claims.
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              allOf:
              - {}
              - properties:
                  info:
                    additionalProperties:
                      type: string
                    type: object
                type: object
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Validate token
      tags:
      - auth
schemes:
- http
swagger: "2.0"

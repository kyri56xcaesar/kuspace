// Package fslite Code generated by swaggo/swag. DO NOT EDIT
package fslite

import "github.com/swaggo/swag"

const docTemplatefslitedocs = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/.well-known/jwks.json": {
            "get": {
                "description": "Returns the JSON Web Key Set used to verify JWTs.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "well-known"
                ],
                "summary": "JWKS endpoint",
                "responses": {
                    "200": {
                        "description": "JWKS keys",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to read or parse JWKS",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/.well-known/minioth": {
            "get": {
                "description": "Returns a basic status and version of the Minioth service.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "well-known"
                ],
                "summary": "Healthcheck endpoint",
                "responses": {
                    "200": {
                        "description": "Service status",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/.well-known/openid-configuration": {
            "get": {
                "description": "Provides OIDC configuration metadata for clients.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "well-known"
                ],
                "summary": "OpenID Connect Discovery Document",
                "responses": {
                    "200": {
                        "description": "OIDC provider metadata",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/audit/logs": {
            "get": {
                "description": "Retrieves recent audit logs from the server. Optional query param 'max' specifies the max number of bytes to read.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get audit logs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Maximum number of bytes to fetch from the audit log",
                        "name": "max",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Audit logs returned successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to read or open audit log",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/groupadd": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Add a new group",
                "parameters": [
                    {
                        "description": "Group data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/kyri56xcaesar_kuspace_internal_utils.Group"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/groupdel": {
            "delete": {
                "tags": [
                    "admin"
                ],
                "summary": "Delete a group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID to delete",
                        "name": "gid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/groupmod": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Modify an entire group entry",
                "parameters": [
                    {
                        "description": "Full group object for replacement",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/kyri56xcaesar_kuspace_internal_utils.Group"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/grouppatch": {
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Patch an existing group",
                "parameters": [
                    {
                        "description": "Fields to update in the group",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "fields": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "gid": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/groups": {
            "get": {
                "description": "Retrieves all groups.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get groups",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "allOf": [
                                    {},
                                    {
                                        "type": "object",
                                        "properties": {
                                            "content": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/definitions/kyri56xcaesar_kuspace_internal_utils.Group"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/admin/hasher": {
            "post": {
                "description": "Hashes a plaintext input or verifies a hash if both are provided.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Hash or verify text",
                "parameters": [
                    {
                        "description": "Text or Hash Verification Input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "hash": {
                                    "type": "string"
                                },
                                "hashcost": {
                                    "type": "integer"
                                },
                                "text": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/register": {
            "post": {
                "description": "Registers a new admin user into the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Admin registration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Admin username (optional if provided in body)",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Admin password (optional if provided in body)",
                        "name": "password",
                        "in": "query"
                    },
                    {
                        "description": "Admin registration data in body (optional)",
                        "name": "admin",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/pkg_fslite.Admin"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Admin registered successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Missing or invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error during registration",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/resource/copy": {
            "post": {
                "description": "Copies a resource from one location to another within the system.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resource"
                ],
                "summary": "Copy a resource",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Source resource in format \u003cvolume_name\u003e/\u003cobject_name\u003e",
                        "name": "source",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Destination resource in format \u003cvolume_name\u003e/\u003cobject_name\u003e",
                        "name": "dest",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Copy successful",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid format or missing arguments",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/resource/delete": {
            "delete": {
                "description": "Deletes a resource by JSON body or query params (name \u0026 volume).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resource"
                ],
                "summary": "Delete a resource",
                "parameters": [
                    {
                        "description": "Resource to delete",
                        "name": "resource",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/kyri56xcaesar_kuspace_internal_utils.Resource"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Name of the resource",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Volume name of the resource",
                        "name": "volume",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful deletion",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request or invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error or internal failure",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/resource/download": {
            "get": {
                "description": "Downloads a resource from a specified volume by filename.",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "resource"
                ],
                "summary": "Download a resource",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Format: \u003cvolume_name\u003e/\u003cobject_name\u003e",
                        "name": "resource",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File stream for download",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/resource/get": {
            "get": {
                "description": "Retrieves resources using name or resource IDs (rids).",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resource"
                ],
                "summary": "Get one or more resources",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource name to search",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated list of resource IDs",
                        "name": "rids",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of resources",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/kyri56xcaesar_kuspace_internal_utils.Resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Query or processing error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "No matching resources found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/resource/stat": {
            "get": {
                "description": "Retrieves the metadata of a specific resource using its volume and name.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resource"
                ],
                "summary": "Get metadata of a resource",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Format: \u003cvolume_name\u003e/\u003cobject_name\u003e",
                        "name": "resource",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource metadata",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid input or formatting",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error during stat",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/resource/upload": {
            "post": {
                "description": "Uploads multiple files to the specified volume. Requires authentication.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resource"
                ],
                "summary": "Upload one or more files to a volume",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Volume name",
                        "name": "volume",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Files to upload",
                        "name": "files",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Files uploaded successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request or parse failure",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "422": {
                        "description": "Failed to insert resource",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/useradd": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Add a new user",
                "parameters": [
                    {
                        "description": "User registration info",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/minioth.RegisterClaim"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/userdel": {
            "delete": {
                "tags": [
                    "admin"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID to delete",
                        "name": "uid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/usermod": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Modify an entire user entry",
                "parameters": [
                    {
                        "description": "User data for full update",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/minioth.RegisterClaim"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/userpatch": {
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Patch an existing user",
                "parameters": [
                    {
                        "description": "Fields to update (must include 'uid')",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/users": {
            "get": {
                "description": "Retrieves user(s), optionally filtered by UID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "uid",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "allOf": [
                                    {},
                                    {
                                        "type": "object",
                                        "properties": {
                                            "content": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/definitions/kyri56xcaesar_kuspace_internal_utils.User"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/admin/uservolumes": {
            "get": {
                "description": "Fetch user-to-volume mappings. (Currently only GET is implemented. PATCH/DELETE placeholders.)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "volume"
                ],
                "summary": "Manage user volume claims",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Comma-separated user IDs to filter",
                        "name": "uids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated volume IDs to filter",
                        "name": "vids",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User volume claims retrieved",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Method not allowed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/verify-password": {
            "post": {
                "description": "Authenticates a user using username and password without issuing a token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Verify password",
                "parameters": [
                    {
                        "description": "User Credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "password": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/volume/delete": {
            "delete": {
                "description": "Deletes a volume either from JSON body or query param ` + "`" + `name` + "`" + `.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "volume"
                ],
                "summary": "Delete a volume",
                "parameters": [
                    {
                        "description": "Volume object",
                        "name": "volume",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/kyri56xcaesar_kuspace_internal_utils.Volume"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Volume name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "volume deleted",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "deletion error or invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/volume/get": {
            "get": {
                "description": "Retrieves volume details using query parameters.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "volume"
                ],
                "summary": "Get volume information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Volume name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Volume ID",
                        "name": "vid",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "volume info",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/kyri56xcaesar_kuspace_internal_utils.Volume"
                            }
                        }
                    },
                    "400": {
                        "description": "retrieval error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/volume/new": {
            "post": {
                "description": "Registers a new volume with specified metadata.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "volume"
                ],
                "summary": "Create a new volume",
                "parameters": [
                    {
                        "description": "Volume object",
                        "name": "volume",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/kyri56xcaesar_kuspace_internal_utils.Volume"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "volume created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "binding or creation error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/job": {
            "get": {
                "description": "GET retrieves jobs by uid(s), jid, or returns all. POST submits one or multiple jobs.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Get or submit jobs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Limit number of jobs",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated list of user IDs",
                        "name": "uids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Job ID or '*' for all jobs",
                        "name": "jids",
                        "in": "query"
                    },
                    {
                        "description": "Single job",
                        "name": "job",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/kyri56xcaesar_kuspace_internal_utils.Job"
                        }
                    },
                    {
                        "description": "Multiple jobs",
                        "name": "jobs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/kyri56xcaesar_kuspace_internal_utils.Job"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "GET retrieves jobs by uid(s), jid, or returns all. POST submits one or multiple jobs.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Get or submit jobs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Limit number of jobs",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated list of user IDs",
                        "name": "uids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Job ID or '*' for all jobs",
                        "name": "jids",
                        "in": "query"
                    },
                    {
                        "description": "Single job",
                        "name": "job",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/kyri56xcaesar_kuspace_internal_utils.Job"
                        }
                    },
                    {
                        "description": "Multiple jobs",
                        "name": "jobs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/kyri56xcaesar_kuspace_internal_utils.Job"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Authenticates a user and returns access and refresh tokens.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login a user",
                "parameters": [
                    {
                        "description": "User login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/minioth.LoginClaim"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "login successful",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Validation or auth failure",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/passwd": {
            "post": {
                "description": "Allows a user to change their password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Change password",
                "parameters": [
                    {
                        "description": "User Credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "password": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Registers a new user with provided credentials and returns UID and primary group.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User registration payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/minioth.RegisterClaim"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "registration successful",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid input or failed to register",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "User already exists",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/resource/cp": {
            "post": {
                "description": "Copies a resource from one path to another using the ` + "`" + `dest` + "`" + ` query param in ` + "`" + `bucket/object` + "`" + ` format.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resources"
                ],
                "summary": "Copy a resource",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Destination path in 'bucket/object' format",
                        "name": "dest",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful copy",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request or missing destination",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Copy failed or internal error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/resource/download": {
            "get": {
                "description": "Downloads a single resource specified by the access context (must be a file, not a directory).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "resources"
                ],
                "summary": "Download a resource",
                "responses": {
                    "200": {
                        "description": "File downloaded",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad request (e.g., target is a directory or vid is invalid)",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to access or stream the resource",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/resource/mv": {
            "post": {
                "description": "Moves a resource (copy + delete) to another bucket/object path using the ` + "`" + `dest` + "`" + ` query parameter.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resources"
                ],
                "summary": "Move a resource",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Destination path in 'bucket/object' format",
                        "name": "dest",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource moved successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid destination format or missing destination",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Copy or delete failed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/resource/rm": {
            "delete": {
                "description": "Deletes the resource specified by the access claim in the request context.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resources"
                ],
                "summary": "Delete a resource",
                "responses": {
                    "200": {
                        "description": "Resource deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error or access claim missing",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/resource/upload": {
            "post": {
                "description": "Uploads one or more files to a specified resource path from multipart form data.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resources"
                ],
                "summary": "Upload files",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Files to upload (multiple supported)",
                        "name": "files",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Files uploaded successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request or form error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity (insertion error)",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/resources": {
            "get": {
                "description": "Returns resources for a given access context. Supports list, tree, or content views.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resources"
                ],
                "summary": "List resources (like ` + "`" + `ls` + "`" + `)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Maximum number of results",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "list",
                            "tree",
                            "content"
                        ],
                        "type": "string",
                        "description": "Output structure: list, tree, or content",
                        "name": "struct",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resources or resource tree",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "No resources found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/token/refresh": {
            "post": {
                "description": "Generates new access and refresh tokens using a valid refresh token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh access token",
                "parameters": [
                    {
                        "description": "Refresh Token",
                        "name": "refresh_token",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "refresh_token": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/user/me": {
            "get": {
                "description": "Returns full user info based on the access token.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get user information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/user/token": {
            "get": {
                "description": "Checks if a token is valid and returns claims.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Validate token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "allOf": [
                                    {},
                                    {
                                        "type": "object",
                                        "properties": {
                                            "info": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/volumes": {
            "get": {
                "description": "GET to list volumes, POST to create one or more, DELETE to remove by vid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "volumes"
                ],
                "summary": "Manage volumes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Volume ID to filter (GET) or delete (DELETE)",
                        "name": "vid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit number of returned volumes",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order for volumes",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "description": "Single volume object",
                        "name": "volume",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/kyri56xcaesar_kuspace_internal_utils.Volume"
                        }
                    },
                    {
                        "description": "Array of volume objects",
                        "name": "volumes",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/kyri56xcaesar_kuspace_internal_utils.Volume"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success with content",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "201": {
                        "description": "Volume(s) created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "202": {
                        "description": "Volume deleted",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request or validation failure",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "GET to list volumes, POST to create one or more, DELETE to remove by vid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "volumes"
                ],
                "summary": "Manage volumes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Volume ID to filter (GET) or delete (DELETE)",
                        "name": "vid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit number of returned volumes",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order for volumes",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "description": "Single volume object",
                        "name": "volume",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/kyri56xcaesar_kuspace_internal_utils.Volume"
                        }
                    },
                    {
                        "description": "Array of volume objects",
                        "name": "volumes",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/kyri56xcaesar_kuspace_internal_utils.Volume"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success with content",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "201": {
                        "description": "Volume(s) created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "202": {
                        "description": "Volume deleted",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request or validation failure",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "GET to list volumes, POST to create one or more, DELETE to remove by vid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "volumes"
                ],
                "summary": "Manage volumes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Volume ID to filter (GET) or delete (DELETE)",
                        "name": "vid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit number of returned volumes",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order for volumes",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "description": "Single volume object",
                        "name": "volume",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/kyri56xcaesar_kuspace_internal_utils.Volume"
                        }
                    },
                    {
                        "description": "Array of volume objects",
                        "name": "volumes",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/kyri56xcaesar_kuspace_internal_utils.Volume"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success with content",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "201": {
                        "description": "Volume(s) created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "202": {
                        "description": "Volume deleted",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request or validation failure",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "GET to list volumes, POST to create one or more, DELETE to remove by vid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "volumes"
                ],
                "summary": "Manage volumes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Volume ID to filter (GET) or delete (DELETE)",
                        "name": "vid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit number of returned volumes",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order for volumes",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "description": "Single volume object",
                        "name": "volume",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/kyri56xcaesar_kuspace_internal_utils.Volume"
                        }
                    },
                    {
                        "description": "Array of volume objects",
                        "name": "volumes",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/kyri56xcaesar_kuspace_internal_utils.Volume"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success with content",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "201": {
                        "description": "Volume(s) created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "202": {
                        "description": "Volume deleted",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request or validation failure",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "GET to list volumes, POST to create one or more, DELETE to remove by vid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "volumes"
                ],
                "summary": "Manage volumes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Volume ID to filter (GET) or delete (DELETE)",
                        "name": "vid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit number of returned volumes",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order for volumes",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "description": "Single volume object",
                        "name": "volume",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/kyri56xcaesar_kuspace_internal_utils.Volume"
                        }
                    },
                    {
                        "description": "Array of volume objects",
                        "name": "volumes",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/kyri56xcaesar_kuspace_internal_utils.Volume"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success with content",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "201": {
                        "description": "Volume(s) created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "202": {
                        "description": "Volume deleted",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request or validation failure",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "kyri56xcaesar_kuspace_internal_utils.Group": {
            "type": "object",
            "properties": {
                "gid": {
                    "description": "Gid is the numeric group ID.\n@example 3001",
                    "type": "integer",
                    "example": 3001
                },
                "groupname": {
                    "description": "Groupname is the name of the group.\n@example researchers",
                    "type": "string",
                    "example": "researchers"
                }
            }
        },
        "kyri56xcaesar_kuspace_internal_utils.Job": {
            "type": "object",
            "properties": {
                "completed": {
                    "type": "boolean"
                },
                "completed_at": {
                    "type": "string"
                },
                "cpu_limit": {
                    "type": "string"
                },
                "cpu_request": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "number"
                },
                "env": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "ephimeral_storage_limit": {
                    "type": "string"
                },
                "ephimeral_storage_request": {
                    "type": "string"
                },
                "input": {
                    "type": "string"
                },
                "input_format": {
                    "description": "perhaps unecessary",
                    "type": "string"
                },
                "jid": {
                    "type": "integer"
                },
                "logic": {
                    "type": "string"
                },
                "logic_body": {
                    "type": "string"
                },
                "logic_headers": {
                    "type": "string"
                },
                "memory_limit": {
                    "type": "string"
                },
                "memory_request": {
                    "type": "string"
                },
                "output": {
                    "type": "string"
                },
                "output_format": {
                    "type": "string"
                },
                "parallelism": {
                    "type": "integer"
                },
                "params": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "priority": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "timeout": {
                    "description": "in minutes",
                    "type": "integer"
                },
                "uid": {
                    "type": "integer"
                }
            }
        },
        "kyri56xcaesar_kuspace_internal_utils.Password": {
            "type": "object",
            "properties": {
                "expirationDate": {
                    "type": "string"
                },
                "hashpass": {
                    "description": "Hashpass is the hashed password.\n@example $2a$10$7s5YfF7...",
                    "type": "string",
                    "example": "$2a$10$7s5YfF7..."
                },
                "inactivityPeriod": {
                    "type": "string"
                },
                "lastPasswordChange": {
                    "description": "LastPasswordChange is the last time the password was changed.",
                    "type": "string"
                },
                "maxiumPasswordAge": {
                    "type": "string"
                },
                "minimumPasswordAge": {
                    "type": "string"
                },
                "warningPeriod": {
                    "type": "string"
                }
            }
        },
        "kyri56xcaesar_kuspace_internal_utils.Resource": {
            "type": "object",
            "properties": {
                "accessed_at": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "gid": {
                    "description": "as in group id",
                    "type": "integer"
                },
                "links": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "perms": {
                    "type": "string"
                },
                "reader": {},
                "rid": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "uid": {
                    "description": "as in user id (owner)",
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "vid": {
                    "type": "integer"
                },
                "vname": {
                    "type": "string"
                }
            }
        },
        "kyri56xcaesar_kuspace_internal_utils.User": {
            "description": "Contains user metadata, credentials, and group memberships.",
            "type": "object",
            "properties": {
                "groups": {
                    "description": "Groups is a list of groups the user belongs to.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/kyri56xcaesar_kuspace_internal_utils.Group"
                    }
                },
                "home": {
                    "description": "Home is the user’s home directory path.",
                    "type": "string",
                    "example": "/home/johndoe"
                },
                "info": {
                    "description": "Info is optional user metadata or notes.",
                    "type": "string",
                    "example": "researcher in group A"
                },
                "password": {
                    "description": "Password contains the user’s password settings and hash.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/kyri56xcaesar_kuspace_internal_utils.Password"
                        }
                    ]
                },
                "pgroup": {
                    "description": "Pgroup is the user’s primary group ID.",
                    "type": "integer",
                    "example": 2001
                },
                "shell": {
                    "description": "Shell is the user’s default shell.",
                    "type": "string",
                    "example": "/bin/bash"
                },
                "uid": {
                    "description": "Uid is the user’s numeric ID.",
                    "type": "integer",
                    "example": 1001
                },
                "username": {
                    "description": "Username is the unique login name of the user.\n@example johndoe",
                    "type": "string",
                    "example": "johndoe"
                }
            }
        },
        "kyri56xcaesar_kuspace_internal_utils.Volume": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "dynamic": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "usage": {
                    "type": "number"
                },
                "vid": {
                    "type": "integer"
                }
            }
        },
        "minioth.LoginClaim": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "minioth.RegisterClaim": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/kyri56xcaesar_kuspace_internal_utils.User"
                }
            }
        },
        "pkg_fslite.Admin": {
            "description": "Admin login/registration payload",
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfofslitedocs holds exported Swagger Info so clients can modify it
var SwaggerInfofslitedocs = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "fslitedocs",
	SwaggerTemplate:  docTemplatefslitedocs,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfofslitedocs.InstanceName(), SwaggerInfofslitedocs)
}

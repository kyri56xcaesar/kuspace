// Package fslite Code generated by swaggo/swag. DO NOT EDIT
package fslite

import "github.com/swaggo/swag"

const docTemplatefslitedocs = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/register": {
            "post": {
                "description": "Registers a new admin user into the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Admin registration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Admin username (optional if provided in body)",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Admin password (optional if provided in body)",
                        "name": "password",
                        "in": "query"
                    },
                    {
                        "description": "Admin registration data in body (optional)",
                        "name": "admin",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/pkg_fslite.Admin"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Admin registered successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Missing or invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error during registration",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/resource/copy": {
            "post": {
                "description": "Copies a resource from one location to another within the system.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resource"
                ],
                "summary": "Copy a resource",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Source resource in format \u003cvolume_name\u003e/\u003cobject_name\u003e",
                        "name": "source",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Destination resource in format \u003cvolume_name\u003e/\u003cobject_name\u003e",
                        "name": "dest",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Copy successful",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid format or missing arguments",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/resource/delete": {
            "delete": {
                "description": "Deletes a resource by JSON body or query params (name \u0026 volume).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resource"
                ],
                "summary": "Delete a resource",
                "parameters": [
                    {
                        "description": "Resource to delete",
                        "name": "resource",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/kyri56xcaesar_kuspace_internal_utils.Resource"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Name of the resource",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Volume name of the resource",
                        "name": "volume",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful deletion",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request or invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error or internal failure",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/resource/download": {
            "get": {
                "description": "Downloads a resource from a specified volume by filename.",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "resource"
                ],
                "summary": "Download a resource",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Format: \u003cvolume_name\u003e/\u003cobject_name\u003e",
                        "name": "resource",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File stream for download",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/resource/get": {
            "get": {
                "description": "Retrieves resources using name or resource IDs (rids).",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resource"
                ],
                "summary": "Get one or more resources",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource name to search",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated list of resource IDs",
                        "name": "rids",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of resources",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/kyri56xcaesar_kuspace_internal_utils.Resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Query or processing error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "No matching resources found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/resource/stat": {
            "get": {
                "description": "Retrieves the metadata of a specific resource using its volume and name.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resource"
                ],
                "summary": "Get metadata of a resource",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Format: \u003cvolume_name\u003e/\u003cobject_name\u003e",
                        "name": "resource",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource metadata",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid input or formatting",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error during stat",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/resource/upload": {
            "post": {
                "description": "Uploads multiple files to the specified volume. Requires authentication.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resource"
                ],
                "summary": "Upload one or more files to a volume",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Volume name",
                        "name": "volume",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Files to upload",
                        "name": "files",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Files uploaded successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request or parse failure",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "422": {
                        "description": "Failed to insert resource",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/uservolumes": {
            "get": {
                "description": "Fetch user-to-volume mappings. (Currently only GET is implemented. PATCH/DELETE placeholders.)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "volume"
                ],
                "summary": "Manage user volume claims",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Comma-separated user IDs to filter",
                        "name": "uids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated volume IDs to filter",
                        "name": "vids",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User volume claims retrieved",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Method not allowed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/volume/delete": {
            "delete": {
                "description": "Deletes a volume either from JSON body or query param ` + "`" + `name` + "`" + `.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "volume"
                ],
                "summary": "Delete a volume",
                "parameters": [
                    {
                        "description": "Volume object",
                        "name": "volume",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/kyri56xcaesar_kuspace_internal_utils.Volume"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Volume name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "volume deleted",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "deletion error or invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/volume/get": {
            "get": {
                "description": "Retrieves volume details using query parameters.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "volume"
                ],
                "summary": "Get volume information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Volume name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Volume ID",
                        "name": "vid",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "volume info",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/kyri56xcaesar_kuspace_internal_utils.Volume"
                            }
                        }
                    },
                    "400": {
                        "description": "retrieval error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/volume/new": {
            "post": {
                "description": "Registers a new volume with specified metadata.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "volume"
                ],
                "summary": "Create a new volume",
                "parameters": [
                    {
                        "description": "Volume object",
                        "name": "volume",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/kyri56xcaesar_kuspace_internal_utils.Volume"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "volume created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "binding or creation error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Authenticates an admin user and returns a token for access.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Admin login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Admin username (optional if provided in body)",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Admin password (optional if provided in body)",
                        "name": "password",
                        "in": "query"
                    },
                    {
                        "description": "Admin credentials in request body (optional)",
                        "name": "admin",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/pkg_fslite.Admin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token returned on successful authentication",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Missing or invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Authentication failed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "kyri56xcaesar_kuspace_internal_utils.Resource": {
            "type": "object",
            "properties": {
                "accessed_at": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "gid": {
                    "description": "as in group id",
                    "type": "integer"
                },
                "links": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "perms": {
                    "type": "string"
                },
                "reader": {},
                "rid": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "uid": {
                    "description": "as in user id (owner)",
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "vid": {
                    "type": "integer"
                },
                "vname": {
                    "type": "string"
                }
            }
        },
        "kyri56xcaesar_kuspace_internal_utils.Volume": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "dynamic": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "object_count": {
                    "type": "integer"
                },
                "path": {
                    "type": "string"
                },
                "usage": {
                    "type": "number"
                },
                "vid": {
                    "type": "integer"
                }
            }
        },
        "pkg_fslite.Admin": {
            "description": "Admin login/registration payload",
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfofslitedocs holds exported Swagger Info so clients can modify it
var SwaggerInfofslitedocs = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "fslitedocs",
	SwaggerTemplate:  docTemplatefslitedocs,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfofslitedocs.InstanceName(), SwaggerInfofslitedocs)
}
